
----------------8<----------[ subject ]------------------------

- make a Zombie class. 
The zombies have a private name and are able to announce themselves like:
<name> BraiiiiiiinnnzzzZ...

- announce( void ) is a member function. 

- add a debugging message in the destructor including the name of the Zombie.

- write a function that will create a Zombie, name it, 
and return it to be used somewhere else in your code. 
	- The prototype of the function is:
	Zombie* newZombie( std::string name );

- write another function that will create a Zombie
	- ****** IMPORTANT ******
	- a Random Chump *** announce itself *** 
		- The prototype of the function is: 
		void randomChump( std::string name );

****** Important ******
	- your Zombies **MUST** be destroyed at the appropriate time 
		- ie die when they are not needed anymore
	- They must be allocated on the stack or the heap depending on its use
		- sometimes itâ€™s appropriate to have them on the stack
		- at other times the heap may a better choice


----------------8<----------[ zombie class ]------------------------


class	Zombie
{
	private:
		std::string	name;
		void		label(void) const;

	public:
		Zombie(std::string name);
		~Zombie(void);

		std::string	get_name(void) const;
		void		announce(void) const;
};


----------------8<----------[ some other stuff ]------------------------

*to declare

	Zombie		*z = newZombie("Z");
	Zombie		z("Z");


*prototype

	Zombie		*newZombie(std::string);
	void		randomChump(std::string);



